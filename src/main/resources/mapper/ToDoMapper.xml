<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fodala.mapper.ToDoMapper">

    <sql id="Base_Column_List">
        id, title, status, description, completed, "start", "end", schedule, important, created, username
    </sql>

    <select id="all" resultType="ToDo">
        SELECT
        <include refid="Base_Column_List"/>
        FROM todo
        ORDER BY created DESC
    </select>

    <select id="filter" parameterType="map" resultType="ToDo">
        SELECT
        <include refid="Base_Column_List"/>
        FROM todo
        <where>
            1 = 1
            <if test=" map.important != null ">
                AND important = #{map.important}
            </if>
            <if test="map.completed != null">
                AND completed = #{map.completed}
            </if>
            <if test="map.startDate != null">
                AND start_date &gt;= #{map.startDate}
            </if>
            <if test="map.endDate != null">
                AND end_date &lt; #{map.endDate}
            </if>
            <if test="map.limit != null and map.offset != null">
                limit #{map.limit} offset #{map.offset}
            </if>
        </where>
        ORDER BY created DESC
    </select>

    <select id="findById" resultType="ToDo">
        SELECT
        <include refid="Base_Column_List"/>
        FROM todo
        WHERE "id" = #{id}
    </select>

    <select id="findByDate" resultType="ToDo">
        SELECT
        <include refid="Base_Column_List"/>
        FROM todo
        WHERE "start" &gt; #{start} AND "start" &lt; #{end}
        ORDER BY created DESC
    </select>

    <select id="search" resultType="ToDo">
        SELECT
        <include refid="Base_Column_List"/>
        FROM todo
        WHERE "title" like #{search}
        ORDER BY created DESC
    </select>

    <insert id="insert">
        INSERT INTO todo
        ("title", "status", "description", "completed", "start", "end", "schedule", "important", "created")
        VALUES
        (#{toDo.title}, #{toDo.status}, #{toDo.description}, #{toDo.completed}, #{toDo.start}, #{toDo.end},
        #{toDo.schedule}, #{toDo.important}, #{toDo.created});
        RETURNING id;
    </insert>

    <select id="lastInsert" resultType="int">
        SELECT MAX(id) as id FROM todo
    </select>

    <update id="important">
        UPDATE todo
        SET "important" = (1 - "important")
        WHERE "id" = #{id}
    </update>

    <update id="completed">
        UPDATE todo
        SET "completed" = (1 - "completed"),
        "end" = IIF(1 - "completed", now(), '')
        WHERE "id" = #{id}
    </update>

    <update id="update">
        UPDATE todo SET
        "title" = #{toDo.title}
        <if test="toDo.status != null">
            , "status" = #{toDo.status}
        </if>
        <if test="toDo.description != null">
            , "description" = #{toDo.description}
        </if>
        <if test="toDo.completed != null">
            , "completed" = #{toDo.completed}
        </if>
        <if test="toDo.start != null">
            , "start" = #{toDo.start}
        </if>
        <if test="toDo.end != null">
            , "end" = #{toDo.end}
        </if>
        <if test="toDo.schedule != null">
            , "schedule" = #{toDo.schedule}
        </if>
        <if test="toDo.important != null">
            , "important" = #{toDo.important}
        </if>
        WHERE "id" = #{toDo.id}
    </update>

    <delete id="delete">
        DELETE
        FROM todo
        WHERE "id" = #{id}
    </delete>

    <select id="history" resultType="ToDoHistory">
        SELECT "id", "todo_id", "title", "status", "description", "completed",
        "start", "end", "schedule", "important", "created", "updated"
        FROM todo_history
        WHERE "todo_id" = #{id}
        ORDER BY "updated" DESC
    </select>

    <select id="count" resultType="map">
        SELECT (SELECT count(*) FROM todo) as tasks,
        (SELECT count(*) FROM todo WHERE important = 1) AS important,
        (SELECT count(*) FROM todo WHERE completed = 1) AS completed,
        (SELECT count(*) FROM todo WHERE "start" &gt; NOW() AND "start" &lt; (NOW() + INTERVAL '1 day')) as myday,
        (select count(*) FROM todo WHERE "start" &gt; NOW() AND "start" &lt; (NOW() + INTERVAL '100 year')) as planned
    </select>

    <select id="todoHistory" resultType="map">
        SELECT *
        FROM todo_history
        ORDER BY updated DESC
    </select>

    <select id="listNames" resultType="map">
        SELECT id, name, created
        FROM list
        ORDER BY created DESC
    </select>

    <select id="findListByCreated" resultType="int">
        SELECT id
        FROM list
        WHERE created = #{created}
    </select>

    <select id="listItems" resultType="ToDo">
        SELECT
        <include refid="Base_Column_List"/>
        FROM todo
        WHERE id IN
            (SELECT todo_id
                FROM list_item
                WHERE
                list_id IN
                    (SELECT id
                    FROM list
                    WHERE "id" = #{id}))
    </select>

    <select id="list" resultType="ToDo">
        SELECT
        <include refid="Base_Column_List"/>
        FROM todo
        WHERE id IN
            (SELECT todo_id
            FROM list_item
            WHERE
            list_id IN
                (SELECT id
                FROM list
                WHERE name = #{name}))
    </select>

    <select id="createList" resultType="string">
        INSERT INTO list(name, created)
        VALUES (#{list}, #{created});
    </select>

    <select id="insertListItem">
        INSERT INTO list_item(list_id, todo_id)
        VALUES (#{listId}, #{toDoId});
    </select>

</mapper>
